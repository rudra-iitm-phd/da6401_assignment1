Model Summary
---------------------------------------
hidden0
weights : (784, 784)
bias : (784, 1)
activation : relu
---------------------------------------
output1
weights : (10, 784)
bias : (10, 1)
activation : softmax
---------------------------------------
Total Number of Parameters : 623290
Loss : 1.15      Train accuracy : 54.52      Validation accuracy : 54.44
-------------------------------------------------------------------------------------
Loss : 0.2      Train accuracy : 84.62      Validation accuracy : 79.78
-------------------------------------------------------------------------------------
Loss : 0.14      Train accuracy : 88.32      Validation accuracy : 81.79
-------------------------------------------------------------------------------------
Loss : 0.13      Train accuracy : 88.6      Validation accuracy : 80.71
-------------------------------------------------------------------------------------
Loss : 0.1      Train accuracy : 91.87      Validation accuracy : 83.52
-------------------------------------------------------------------------------------
Loss : 0.09      Train accuracy : 92.4      Validation accuracy : 83.82
-------------------------------------------------------------------------------------
Loss : 0.1      Train accuracy : 91.6      Validation accuracy : 83.26
-------------------------------------------------------------------------------------
Loss : 0.09      Train accuracy : 93.15      Validation accuracy : 84.12
-------------------------------------------------------------------------------------
Loss : 0.09      Train accuracy : 93.35      Validation accuracy : 83.8
-------------------------------------------------------------------------------------
Loss : 0.08      Train accuracy : 93.73      Validation accuracy : 83.92
-------------------------------------------------------------------------------------
Loss : 0.08      Train accuracy : 93.78      Validation accuracy : 84.04
-------------------------------------------------------------------------------------
Loss : 0.09      Train accuracy : 93.35      Validation accuracy : 83.4
-------------------------------------------------------------------------------------
Loss : 0.08      Train accuracy : 94.62      Validation accuracy : 84.11
-------------------------------------------------------------------------------------
Loss : 0.08      Train accuracy : 94.35      Validation accuracy : 84.07
-------------------------------------------------------------------------------------
Loss : 0.08      Train accuracy : 94.3      Validation accuracy : 84.26
-------------------------------------------------------------------------------------
Loss : 0.08      Train accuracy : 94.12      Validation accuracy : 84.09
-------------------------------------------------------------------------------------
Loss : 0.08      Train accuracy : 94.35      Validation accuracy : 84.11
-------------------------------------------------------------------------------------
Loss : 0.08      Train accuracy : 94.37      Validation accuracy : 84.09
-------------------------------------------------------------------------------------
Loss : 0.07      Train accuracy : 94.98      Validation accuracy : 84.24
-------------------------------------------------------------------------------------
Loss : 0.08      Train accuracy : 94.52      Validation accuracy : 84.06
-------------------------------------------------------------------------------------
Traceback (most recent call last):
  File "train.py", line 42, in <module>
    trainer.learn(nn=nn, optim=optim, loss_fn=loss_fn, lr=configuration_script['learning_rate'], batch_size=configuration_script['batch_size'], epochs = configuration_script['epochs'], acc_metrics=accuracy, loss = loss_fn, beta = configuration_script['beta'], forward=nn.forward, beta1 = configuration_script['beta1'], beta2 = configuration_script['beta2'], weight_decay = configuration_script['weight_decay'], eps = configuration_script['epsilon'])
  File "/Users/rudra_sarkar/Documents/PhD IIT Madras/Intro to Deep Learning M Khapra DA6401/DA6401 Assignment/da6401_assignment1/trainer.py", line 50, in learn
    grads = loss.backpropagate(params)
  File "/Users/rudra_sarkar/Documents/PhD IIT Madras/Intro to Deep Learning M Khapra DA6401/DA6401 Assignment/da6401_assignment1/loss_functions.py", line 59, in backpropagate
    grads = {block:{layer:np.zeros(shape = (params[block][layer].shape[0], params[block][layer].shape[1])) if layer!= 'h' else 0 for layer in list(params[block].keys())} for block in list(params.keys()) }
  File "/Users/rudra_sarkar/Documents/PhD IIT Madras/Intro to Deep Learning M Khapra DA6401/DA6401 Assignment/da6401_assignment1/loss_functions.py", line 59, in <dictcomp>
    grads = {block:{layer:np.zeros(shape = (params[block][layer].shape[0], params[block][layer].shape[1])) if layer!= 'h' else 0 for layer in list(params[block].keys())} for block in list(params.keys()) }
  File "/Users/rudra_sarkar/Documents/PhD IIT Madras/Intro to Deep Learning M Khapra DA6401/DA6401 Assignment/da6401_assignment1/loss_functions.py", line 59, in <dictcomp>
    grads = {block:{layer:np.zeros(shape = (params[block][layer].shape[0], params[block][layer].shape[1])) if layer!= 'h' else 0 for layer in list(params[block].keys())} for block in list(params.keys()) }
KeyboardInterrupt
